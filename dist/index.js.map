{
  "version": 3,
  "sources": ["../lib/fill_line.js", "../lib/align_center.js", "../lib/align_left.js", "../lib/align_right.js", "../lib/align_flush_left.js", "../lib/align_flush_right.js", "../lib/align_line.js", "../lib/ansi_escape_codes.js", "../lib/ansi_escape_code.js", "../lib/horizontal_rule.js", "../lib/format.js", "../lib/defaults.js", "../lib/validate.js", "../lib/styles.js", "../lib/style_to_ansi.js", "../lib/style_line.js", "../lib/emoji.js", "../lib/parse_slide.js", "../lib/parse.js", "../lib/footer.js", "../lib/blank_line.js", "../lib/commands/blank.js", "../lib/commands/current_slide.js", "../lib/commands/end.js", "../lib/commands/first.js", "../lib/commands/first_fragment.js", "../lib/commands/jump.js", "../lib/commands/jump_to.js", "../lib/commands/last.js", "../lib/commands/last_fragment.js", "../lib/commands/load_presentation.js", "../lib/commands/next.js", "../lib/commands/next_slide.js", "../lib/commands/num_slides.js", "../lib/help_text.js", "../lib/commands/pres.js", "../lib/commands/prev.js", "../lib/commands/prev_slide.js", "../lib/commands/redraw.js", "../lib/commands/reload_presentation.js", "../lib/commands/render_slide.js", "../lib/commands/run_slide.js", "../lib/commands/unwatch.js", "../lib/commands/watch.js", "../lib/commands.js", "../lib/set_commands.js", "../data/help.json", "../data/info.json", "../data/example.json", "../lib/docs.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Fills a slide line.\n*\n* @private\n* @param {string} line - line text\n* @param {string} fill - fill character\n* @param {NonNegativeInteger} left - number of characters to fill left (left \"padding\")\n* @param {NonNegativeInteger} right - number of characters to fill right (right \"padding\")\n* @returns {string} filled line\n*/\nfunction fillLine( line, fill, left, right ) {\n\tvar out;\n\tvar i;\n\n\tout = '';\n\tfor ( i = 0; i < left; i++ ) {\n\t\tout += fill;\n\t}\n\tout += line;\n\tfor ( i = 0; i < right; i++ ) {\n\t\tout += fill;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fillLine;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fillLine = require( './fill_line.js' );\n\n\n// MAIN //\n\n/**\n* Center aligns a line of slide text.\n*\n* ## Notes\n*\n* -   If provided a line of text with an odd number of characters, the aligned text is offset by one character to the left and thus not perfectly balanced.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {string} line - line text\n* @param {NonNegativeInteger} len - effective line length\n* @param {string} fill - fill character\n* @returns {string} aligned text\n*/\nfunction alignCenter( width, line, len, fill ) {\n\tvar space = width - len;\n\tvar left = (space/2)|0;\n\treturn fillLine( line, fill, left, space-left );\n}\n\n\n// EXPORTS //\n\nmodule.exports = alignCenter;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fillLine = require( './fill_line.js' );\n\n\n// MAIN //\n\n/**\n* Left aligns a line of slide text.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {string} line - line text\n* @param {NonNegativeInteger} len - effective line length\n* @param {string} fill - fill character\n* @param {NonNegativeInteger} padding - padding\n* @returns {string} aligned text\n*/\nfunction alignLeft( width, line, len, fill, padding ) {\n\tvar right;\n\tvar left;\n\n\tleft = (padding/2)|0; // Note: presentation line length assumed never greater than 2^31-1!\n\tright = width - left - len;\n\n\treturn fillLine( line, fill, left, right );\n}\n\n\n// EXPORTS //\n\nmodule.exports = alignLeft;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fillLine = require( './fill_line.js' );\n\n\n// MAIN //\n\n/**\n* Right aligns a line of slide text.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {string} line - line text\n* @param {NonNegativeInteger} len - effective line length\n* @param {string} fill - fill character\n* @param {NonNegativeInteger} padding - padding\n* @returns {string} aligned text\n*/\nfunction alignRight( width, line, len, fill, padding ) {\n\tvar right;\n\tvar left;\n\n\tright = ( (padding+1)/2 )|0; // Note: presentation line length assumed never greater than 2^31-1!\n\tleft = width - right - len;\n\n\treturn fillLine( line, fill, left, right );\n}\n\n\n// EXPORTS //\n\nmodule.exports = alignRight;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fillLine = require( './fill_line.js' );\n\n\n// MAIN //\n\n/**\n* Aligns a line of slide text against the left margin.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {string} line - line text\n* @param {NonNegativeInteger} len - effective line length\n* @param {string} fill - fill character\n* @returns {string} aligned text\n*/\nfunction alignFlushLeft( width, line, len, fill ) {\n\tvar right = width - len;\n\treturn fillLine( line, fill, 0, right );\n}\n\n\n// EXPORTS //\n\nmodule.exports = alignFlushLeft;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fillLine = require( './fill_line.js' );\n\n\n// MAIN //\n\n/**\n* Aligns a line of slide text against the right margin.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {string} line - line text\n* @param {NonNegativeInteger} len - effective line length\n* @param {string} fill - fill character\n* @returns {string} aligned text\n*/\nfunction alignFlushRight( width, line, len, fill ) {\n\tvar left = width - len;\n\treturn fillLine( line, fill, left, 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = alignFlushRight;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar startsWith = require( '@stdlib/string-starts-with' );\nvar alignCenter = require( './align_center.js' );\nvar alignLeft = require( './align_left.js' );\nvar alignRight = require( './align_right.js' );\nvar alignFlushLeft = require( './align_flush_left.js' );\nvar alignFlushRight = require( './align_flush_right.js' );\n\n\n// MAIN //\n\n/**\n* Aligns a line of presentation text.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {string} txt - line text\n* @param {NonNegativeInteger} len - effective line length\n* @param {string} fill - fill character\n* @param {NonNegativeInteger} padding - padding\n* @returns {string} formatted line text\n*/\nfunction align( width, txt, len, fill, padding ) {\n\tif ( startsWith( txt, '<< ' ) ) {\n\t\treturn alignFlushLeft( width, txt.substring( 3 ), len-3, fill );\n\t}\n\tif ( startsWith( txt, '>> ' ) ) {\n\t\treturn alignFlushRight( width, txt.substring( 3 ), len-3, fill );\n\t}\n\tif ( startsWith( txt, '< ' ) ) {\n\t\treturn alignLeft( width, txt.substring( 2 ), len-2, fill, padding );\n\t}\n\tif ( startsWith( txt, '> ' ) ) {\n\t\treturn alignRight( width, txt.substring( 2 ), len-2, fill, padding );\n\t}\n\tif ( startsWith( txt, '| ' ) ) {\n\t\treturn alignCenter( width, txt.substring( 2 ), len-2, fill );\n\t}\n\t// Default: left align\n\treturn alignLeft( width, txt, len, fill, padding );\n}\n\n\n// EXPORTS //\n\nmodule.exports = align;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/*\n* [ANSI escape sequences][1]:\n*\n* -   `\\u001b`: ESC, the escape character\n* -   `[X`: color code\n*\n* [1]: https://en.wikipedia.org/wiki/ANSI_escape_code\n*/\nvar ANSI_ESCAPE_CODES = {\n\t// NOTE: keep in alphabetical order...\n\t'BLACK': '\\u001b[30m',     // foreground color for ANSI black\n\t'BLACK_B': '\\u001b[40m',   // background color ANSI black\n\t'BLUE': '\\u001b[34m',      // foreground color for ANSI blue\n\t'BLUE_B': '\\u001b[44m',    // background color for ANSI blue\n\t'BOLD': '\\u001b[1m',       // ANSI bold\n\t'CYAN': '\\u001b[36m',      // foreground color for ANSI cyan\n\t'CYAN_B': '\\u001b[46m',    // background color for ANSI cyan\n\t'GREEN': '\\u001b[32m',     // foreground color for ANSI green\n\t'GREEN_B': '\\u001b[42m',   // background color for ANSI green\n\t'MAGENTA': '\\u001b[35m',   // foreground color for ANSI magenta\n\t'MAGENTA_B': '\\u001b[45m', // background color for ANSI magenta\n\t'RED': '\\u001b[31m',       // foreground color for ANSI red\n\t'RED_B': '\\u001b[41m',     // background color for ANSI red\n\t'RESET': '\\u001b[0m',      // ANSI reset\n\t'REVERSED': '\\u001b[7m',   // ANSI reversed\n\t'UNDERLINED': '\\u001b[4m', // ANSI underline\n\t'WHITE': '\\u001b[37m',     // foreground color for ANSI white\n\t'WHITE_B': '\\u001b[47m',   // background color for ANSI white\n\t'YELLOW': '\\u001b[33m',    // foreground color for ANSI yellow\n\t'YELLOW_B': '\\u001b[43m'   // background color for ANSI yellow\n};\n\n\n// EXPORTS //\n\nmodule.exports = ANSI_ESCAPE_CODES;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar ANSI_ESCAPE_CODES = require( './ansi_escape_codes.js' );\n\n\n// MAIN //\n\n/**\n* Returns the ANSI escape code corresponding to a provided escape code name.\n*\n* @private\n* @param {string} name - ANSI escape code name\n* @returns {(string|null)} escape code\n*/\nfunction escapeCode( name ) {\n\tif ( hasOwnProp( ANSI_ESCAPE_CODES, name ) ) {\n\t\treturn ANSI_ESCAPE_CODES[ name ];\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = escapeCode;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar repeat = require( '@stdlib/string-repeat' );\nvar escapeCode = require( './ansi_escape_code.js' );\nvar fillLine = require( './fill_line.js' );\n\n\n// VARIABLES //\n\nvar RESET = escapeCode( 'RESET' );\nvar ESC = RESET[ 0 ];\nvar END = RESET[ RESET.length-1 ]; // Note: last character should be the same for all ANSI escape codes\nvar DEFAULT_PATTERN = '-';\nvar RE_UTF16_HIGH_SURROGATE = /[\\uD800-\\uDBFF]/; // TODO: use stdlib package\n\n\n// MAIN //\n\n/**\n* Generates a horizontal rule.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {string} pattern - rule pattern\n* @param {NonNegativeInteger} len - effective pattern length\n* @param {string} fill - fill character\n* @param {NonNegativeInteger} padding - padding\n* @returns {string} horizontal rule\n*/\nfunction rule( width, pattern, len, fill, padding ) {\n\tvar reset;\n\tvar ANSI;\n\tvar rlen;\n\tvar left;\n\tvar str;\n\tvar rem;\n\tvar ch;\n\tvar N;\n\tvar i;\n\n\tif ( pattern === '' ) {\n\t\tpattern = DEFAULT_PATTERN;\n\t\tlen = pattern.length;\n\t}\n\treset = '';\n\n\t// Determine the number of complete repeats:\n\trlen = width - padding;\n\tN = ( rlen/len )|0; // Note: assume never greater than 2^31-1!\n\n\t// Generate an initial rule consisting of a whole number of repeats:\n\tstr = repeat( pattern, N );\n\n\t// Handle whatever is remaining...\n\trem = rlen - (len*N);\n\tif ( rem > 0 ) {\n\t\tfor ( i = 0; i < pattern.length; i++ ) {\n\t\t\tch = pattern[ i ];\n\n\t\t\t// Note: order matters for what follows...\n\t\t\tif ( ch === END ) {\n\t\t\t\t// Disable the `ANSI` flag upon closing an ANSI escape code...\n\t\t\t\tif ( ANSI ) {\n\t\t\t\t\tANSI = false;\n\t\t\t\t}\n\t\t\t\tstr += ch;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Ensure we retain ANSI escape codes...\n\t\t\tif ( ANSI ) {\n\t\t\t\tstr += ch;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// If we encounter an ASCI escape sequence, toggle the `ANSI` flag...\n\t\t\tif ( ch === ESC ) {\n\t\t\t\tstr += ch;\n\t\t\t\tANSI = true;\n\t\t\t\treset += RESET; // ensure we reset styles in the event we cut the pattern string before it includes such a reset\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Do not cut surrogate pairs...\n\t\t\tif ( RE_UTF16_HIGH_SURROGATE.test( ch ) ) {\n\t\t\t\tif ( rem <= 1 ) {\n\t\t\t\t\tstr += fill;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += ch;\n\t\t\t\trem -= 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Pattern character...\n\t\t\tstr += ch;\n\t\t\trem -= 1;\n\t\t\tif ( rem === 0 ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tleft = (padding/2)|0; // Note: assume never greater than 2^31-1!\n\treturn fillLine( str+reset, fill, left, padding-left );\n}\n\n\n// EXPORTS //\n\nmodule.exports = rule;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar startsWith = require( '@stdlib/string-starts-with' );\nvar align = require( './align_line.js' );\nvar rule = require( './horizontal_rule.js' );\n\n\n// MAIN //\n\n/**\n* Formats lines of slide text.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {ObjectArray} lines - lines of slide text\n* @param {string} fill - fill character\n* @param {NonNegativeInteger} padding - alignment padding\n* @returns {ObjectArray} formatted lines\n*/\nfunction format( width, lines, fill, padding ) {\n\tvar txt;\n\tvar len;\n\tvar i;\n\n\t// Format each slide line...\n\tlines = lines.slice();\n\tfor ( i = 0; i < lines.length; i++ ) {\n\t\ttxt = lines[ i ].text;\n\t\tlen = lines[ i ].length;\n\n\t\t// NOTE: order matters (check first for full screen horizontal rule before regular horizontal rule)...\n\t\tif ( startsWith( txt, '//' ) ) {\n\t\t\ttxt = rule( width, txt.substring( 2 ), len-2, fill, 0 );\n\t\t} else if ( startsWith( txt, '/' ) ) {\n\t\t\ttxt = rule( width, txt.substring( 1 ), len-1, fill, padding );\n\t\t} else {\n\t\t\ttxt = align( width, txt, len, fill, padding );\n\t\t}\n\t\tlines[ i ] = {\n\t\t\t'text': txt,\n\t\t\t'length': width // effective line length after alignment\n\t\t};\n\t}\n\treturn lines;\n}\n\n\n// EXPORTS //\n\nmodule.exports = format;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default presentation options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\tvar options = {\n\t\t'borderTop': '*',\n\t\t'borderBottom': '*',\n\t\t'borderLeft': '* ',\n\t\t'borderRight': ' *',\n\t\t'newline': '\\n',\n\t\t'whitespace': ' ',\n\t\t'width': null,\n\t\t'height': null,\n\t\t'counter': false,\n\t\t'workspace': 'presentation',\n\t\t'autoClear': true,\n\t\t'loop': false\n\t};\n\treturn options;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defaults;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.borderTop] - top border character sequence\n* @param {string} [options.borderBottom] - bottom border character sequence\n* @param {string} [options.borderLeft] - left border character sequence\n* @param {string} [options.borderRight] - right border character sequence\n* @param {(boolean|string)} [options.counter] - slide counter\n* @param {(PositiveInteger|null)} [options.width] - presentation width\n* @param {(PositiveInteger|null)} [options.height] - presentation height\n* @param {string} [options.workspace] - REPL workspace name\n* @param {string} [options.load] - file path specifying a presentation file to load\n* @param {boolean} [options.autoClear] - boolean indicating whether to automatically clear the screen before writing a rendered slide to the REPL\n* @param {boolean} [options.loop] - boolean indicating whether to \"loop\" a presentation\n* @throws {Error} must provide valid options\n* @returns {(Error|null)} error or null\n*\n* @example\n* var options = {\n*     'counter': true\n* };\n* var opts = {};\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'borderTop' ) ) {\n\t\topts.borderTop = options.borderTop;\n\t\tif ( !isString( options.borderTop ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'borderTop', options.borderTop ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'borderBottom' ) ) {\n\t\topts.borderBottom = options.borderBottom;\n\t\tif ( !isString( options.borderBottom ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'borderBottom', options.borderBottom ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'borderLeft' ) ) {\n\t\topts.borderLeft = options.borderLeft;\n\t\tif ( !isString( options.borderLeft ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'borderLeft', options.borderLeft ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'borderRight' ) ) {\n\t\topts.borderRight = options.borderRight;\n\t\tif ( !isString( options.borderRight ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'borderRight', options.borderRight ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'counter' ) ) {\n\t\topts.counter = options.counter;\n\t\tif ( options.counter !== 'progress' && !isBoolean( options.counter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a recognized string or boolean. Option: `%s`.', 'counter', options.counter ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'width' ) ) {\n\t\topts.width = options.width;\n\t\tif ( options.width !== null && !isPositiveInteger( options.width ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a positive integer or null. Option: `%s`.', 'width', options.width ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'height' ) ) {\n\t\topts.height = options.height;\n\t\tif ( options.height !== null && !isPositiveInteger( options.height ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a positive integer or null. Option: `%s`.', 'height', options.height ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'workspace' ) ) {\n\t\topts.workspace = options.workspace;\n\t\tif ( !isString( options.workspace ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'workspace', options.workspace ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'load' ) ) {\n\t\topts.load = options.load;\n\t\tif ( !isString( options.load ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'load', options.load ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'autoClear' ) ) {\n\t\topts.autoClear = options.autoClear;\n\t\tif ( !isBoolean( options.autoClear ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'autoClear', options.autoClear ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'loop' ) ) {\n\t\topts.loop = options.loop;\n\t\tif ( !isBoolean( options.loop ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'loop', options.loop ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar STYLES = {\n\t// Foreground colors:\n\t'b': 'BLUE',\n\t'c': 'CYAN',\n\t'g': 'GREEN',\n\t'k': 'BLACK',\n\t'm': 'MAGENTA',\n\t'r': 'RED',\n\t'w': 'WHITE',\n\t'y': 'YELLOW',\n\n\t// Background colors:\n\t'B': 'BLUE_B',\n\t'C': 'CYAN_B',\n\t'G': 'GREEN_B',\n\t'K': 'BLACK_B',\n\t'M': 'MAGENTA_B',\n\t'R': 'RED_B',\n\t'W': 'WHITE_B',\n\t'Y': 'YELLOW_B',\n\n\t// Styling:\n\t'!': 'REVERSED',\n\t'*': 'BOLD',\n\t'_': 'UNDERLINED'\n};\n\n\n// EXPORTS //\n\nmodule.exports = STYLES;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar escapeCode = require( './ansi_escape_code.js' );\nvar STYLES = require( './styles.js' );\n\n\n// MAIN //\n\n/**\n* Returns the ANSI escape code corresponding to a provided style.\n*\n* @private\n* @param {string} style - style\n* @returns {(string|null)} escape code\n*/\nfunction style2ansi( style ) {\n\tif ( hasOwnProp( STYLES, style ) ) {\n\t\treturn escapeCode( STYLES[ style ] );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = style2ansi;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( '@stdlib/string-base-replace' );\nvar style2ansi = require( './style_to_ansi.js' );\nvar escapeCode = require( './ansi_escape_code.js' );\n\n\n// VARIABLES //\n\nvar RESET = escapeCode( 'RESET' );\n\n\n// MAIN //\n\n/**\n* Applies ANSI styling to a line of slide text.\n*\n* ## Notes\n*\n* -   The input line object is mutated.\n*\n* @private\n* @param {Object} line - line\n* @returns {Object} styled line\n*/\nfunction ansiStyle( line ) {\n\tvar RE_ANSI_ESCAPE;\n\tvar reset;\n\tvar len;\n\n\t// Create a regular expression for matching escaped characters:\n\tRE_ANSI_ESCAPE = /(\\\\.)/g;\n\n\t// Initialize a length adjustment factor:\n\tlen = 0;\n\n\t// If we encounter ANSI style indicators, we need to \"close\" the ANSI escape sequence:\n\treset = '';\n\n\t// Replace ANSI style indicators with their corresponding escape sequences:\n\tline.text = replace( line.text, RE_ANSI_ESCAPE, replacer );\n\n\t// If we applied ANSI styling, close the ANSI escape sequence:\n\tline.text += reset;\n\n\t// Update the effective line length:\n\tline.length += len;\n\n\t// Return the styled line:\n\treturn line;\n\n\t/**\n\t* Callback invoked for each match.\n\t*\n\t* @private\n\t* @param {string} match - matched substring\n\t* @param {string} p1 - first string found by a parenthesized capture group\n\t* @returns {string} replacement string\n\t*/\n\tfunction replacer( match, p1 ) {\n\t\tvar ch = p1[ 1 ];\n\t\tvar c;\n\n\t\tc = style2ansi( ch );\n\t\tif ( c ) {\n\t\t\treset = RESET;\n\t\t\tlen -= 2;\n\t\t\treturn c;\n\t\t}\n\t\tif ( ch === 's' ) {\n\t\t\tlen -= 2;\n\t\t\treturn RESET;\n\t\t}\n\t\tif ( ch === '\\\\' ) {\n\t\t\tlen -= 1;\n\t\t\treturn '\\\\\\\\';\n\t\t}\n\t\treturn '\\\\\\\\' + ch;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = ansiStyle;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( '@stdlib/string-base-replace' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar table = require( '@stdlib/datasets-emoji-code-picto' );\n\n\n// VARIABLES //\n\nvar TABLE = table();\n\n\n// MAIN //\n\n/**\n* Replaces emoji codes with rendered emoji in a line of slide text.\n*\n* ## Notes\n*\n* -   The input line object is mutated.\n*\n* @private\n* @param {Object} line - line\n* @returns {Object} rendered line\n*/\nfunction emoji( line ) {\n\tvar RE_EMOJI_CODE;\n\tvar len;\n\n\t// Create a regular expression for matching emoji codes (code schema: `:<short_name>[::<modifier>[, <modifier>[, ...]]]`):\n\tRE_EMOJI_CODE = /:([\\w+\\-]+)(?::{2}([\\w+\\-,\\s]+))?:/g; // eslint-disable-line no-useless-escape\n\n\t// Initialize a length adjustment factor:\n\tlen = 0;\n\n\t// Replace emoji codes with rendered emojis:\n\tline.text = replace( line.text, RE_EMOJI_CODE, replacer );\n\n\t// Update the effective line length:\n\tline.length += len;\n\n\t// Return the rendered line:\n\treturn line;\n\n\t/**\n\t* Callback invoked for each match.\n\t*\n\t* @private\n\t* @param {string} match - matched substring\n\t* @param {string} p1 - first string found by a parenthesized capture group\n\t* @param {(string|void)} p2 - second string found by a parenthesized capture group\n\t* @returns {string} replacement string\n\t*/\n\tfunction replacer( match, p1, p2 ) {\n\t\tvar code;\n\t\tvar out;\n\n\t\t// Reconstitute the emoji code in order to normalize the code string:\n\t\tcode = ':' + p1 + ':';\n\t\tif ( p2 ) {\n\t\t\tp2 = p2.split( /,\\s*/ ).join( ', ' ); // normalize any modifiers by ensuring consistent modifier spacing\n\t\t\tcode += ':' + p2 + ':';\n\t\t}\n\t\tif ( hasOwnProp( TABLE, code ) ) {\n\t\t\tout = TABLE[ code ];\n\n\t\t\t// Note: we limit ourselves to emojis that are two columns wide--emoji being considered wide characters--hence, minus two. Depending on Unicode support, other emoji may not render as a single glyph.\n\t\t\tif ( out.length === 2 ) {\n\t\t\t\tlen -= match.length - 2;\n\t\t\t\treturn out;\n\t\t\t}\n\t\t}\n\t\t// If unable to convert an emoji code to a rendered emoji, return the matched substring unchanged:\n\t\treturn match;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = emoji;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar RE_EOL = require( '@stdlib/regexp-eol' ).REGEXP;\nvar trim = require( '@stdlib/string-trim' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar max = require( '@stdlib/math-base-special-max' );\nvar style = require( './style_line.js' );\nvar emoji = require( './emoji.js' );\n\n\n// VARIABLES //\n\nvar FRAGMENT_SEP = '--';\nvar NOTES_SEP = '~~~';\nvar RE_CODE_DELIMITER = /^(\\s*)```\\s*([a-z]+)?$/;\nvar CODE_INDENTATION = '    ';\n\n// Hash for normalizing code block languages:\nvar LANGS = {\n\t'js': 'javascript',\n\t'javascript': 'javascript'\n};\n\n\n// MAIN //\n\n/**\n* Parses raw slide text.\n*\n* @private\n* @param {string} text - raw slide text\n* @returns {Object} slide object\n*/\nfunction parseSlide( text ) {\n\tvar CODE_BLOCK_INDENTATION;\n\tvar CODE_BLOCK;\n\tvar lines;\n\tvar frags;\n\tvar line;\n\tvar lang;\n\tvar out;\n\tvar f;\n\tvar m;\n\tvar j;\n\tvar k;\n\n\tout = {\n\t\t'raw': text,\n\t\t'fragments': [],\n\t\t'code': [],\n\t\t'notes': '',\n\t\t'length': 0,   // number of lines\n\t\t'maxLength': 0 // maximum line length\n\t};\n\n\t// Extract speaker notes (if any)...\n\ttext = text.split( NOTES_SEP );\n\tif ( text.length > 1 ) {\n\t\tout.notes += trim( text.slice( 1 ).join( NOTES_SEP ) );\n\t}\n\ttext = text[ 0 ];\n\n\t// Process slide fragments...\n\tfrags = text.split( FRAGMENT_SEP );\n\tfor ( j = 0; j < frags.length; j++ ) {\n\t\tlines = trim( frags[ j ] ).split( RE_EOL );\n\t\tif ( j === 0 ) {\n\t\t\tf = [];\n\t\t} else {\n\t\t\tf = out.fragments[ j-1 ].slice();\n\t\t}\n\t\tCODE_BLOCK = false;\n\t\tfor ( k = 0; k < lines.length; k++) {\n\t\t\tline = lines[ k ];\n\n\t\t\t// Handle code blocks...\n\t\t\tm = line.match( RE_CODE_DELIMITER );\n\t\t\tif ( m ) {\n\t\t\t\tif ( CODE_BLOCK === false ) {\n\t\t\t\t\t// Starting code delimiter:\n\t\t\t\t\tCODE_BLOCK = true;\n\t\t\t\t\tCODE_BLOCK_INDENTATION = m[ 1 ];\n\n\t\t\t\t\t// Determine the code block language...\n\t\t\t\t\tif ( m[ 2 ] ) {\n\t\t\t\t\t\tif ( hasOwnProp( LANGS, m[ 2 ] ) ) { // eslint-disable-line max-depth\n\t\t\t\t\t\t\tlang = LANGS[ m[ 2 ] ];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlang = 'unknown';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// By default, we assume JavaScript is the code block language:\n\t\t\t\t\t\tlang = 'javascript';\n\t\t\t\t\t}\n\t\t\t\t\tout.code.push({\n\t\t\t\t\t\t'lang': lang,\n\t\t\t\t\t\t'src': []\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Ending code delimiter:\n\t\t\t\t\tCODE_BLOCK = false;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( CODE_BLOCK ) {\n\t\t\t\tline = line.slice( CODE_BLOCK_INDENTATION.length );\n\t\t\t\tout.code[ out.code.length-1 ].src.push( line );\n\t\t\t\tline = CODE_INDENTATION + line;\n\n\t\t\t\t// TODO: apply syntax highlighting\n\t\t\t}\n\t\t\t// Create a line object for tracking a line's effective length:\n\t\t\tline = {\n\t\t\t\t'text': line,\n\t\t\t\t'length': line.length\n\t\t\t};\n\n\t\t\t// Apply styling:\n\t\t\tline = style( line );\n\n\t\t\t// Apply emojis:\n\t\t\tline = emoji( line );\n\n\t\t\t// Append the line to the fragment:\n\t\t\tf.push( line );\n\t\t}\n\t\t// A fragment includes the slide text of all prior fragments:\n\t\tout.fragments.push( f );\n\t}\n\tout.length = f.length;\n\n\t// Determine the maximum slide text line length...\n\tfor ( j = 0; j < f.length; j++ ) {\n\t\tout.maxLength = max( out.maxLength, f[ j ].length );\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = parseSlide;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar parseSlide = require( './parse_slide.js' );\n\n\n// VARIABLES //\n\nvar SLIDE_SEP = '---';\n\n\n// MAIN //\n\n/**\n* Parses a string into presentation slides.\n*\n* @private\n* @param {Array} out - output array\n* @param {string} str - string to parse\n* @returns {ObjectArray} output array\n*/\nfunction parse( out, str ) {\n\tvar slides;\n\tvar i;\n\n\tslides = str.split( SLIDE_SEP );\n\tfor ( i = 0; i < slides.length; i++ ) {\n\t\tout.push( parseSlide( slides[ i ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = parse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar alignFlushRight = require( './align_flush_right.js' );\n\n\n// MAIN //\n\n/**\n* Creates a slide footer line.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {string} fill - fill character\n* @param {(string|boolean)} type - footer type\n* @param {PositiveInteger} n - slide number\n* @param {PositiveInteger} total - total number of slides\n* @returns {string} footer line\n*/\nfunction footer( width, fill, type, n, total ) {\n\tvar line = n.toString();\n\tif ( type === 'progress' ) {\n\t\tline += '/' + total;\n\t}\n\tline += ' ';\n\treturn alignFlushRight( width, line, line.length, fill );\n}\n\n\n// EXPORTS //\n\nmodule.exports = footer;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar repeat = require( '@stdlib/string-repeat' );\n\n\n// MAIN //\n\n/**\n* Returns a blank slide line.\n*\n* @private\n* @param {PositiveInteger} width - slide width\n* @param {string} fill - fill character\n* @param {string} borderLeft - left border\n* @param {string} borderRight - right border\n* @returns {string} blank slide line\n*/\nfunction blankLine( width, fill, borderLeft, borderRight ) {\n\tvar line;\n\tif ( borderRight.length === 0 ) {\n\t\tline = '';\n\t} else {\n\t\tline = repeat( fill, width );\n\t}\n\treturn borderLeft + line + borderRight;\n}\n\n\n// EXPORTS //\n\nmodule.exports = blankLine;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar repeat = require( '@stdlib/string-repeat' );\n\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `blank` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Prints a \"blank\" slide.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tvar str = repeat( pres._opts.newline, pres.height+1 );\n\t\tpres._repl._ostream.write( str );\n\t\tpres._repl.once( 'drain', onDrain );\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\t/*\n\t\t\t* [ANSI escape sequences][1]:\n\t\t\t*\n\t\t\t* -   `\\u001b`: ESC, the escape character\n\t\t\t* -   `[1T`: scroll down one line\n\t\t\t* -   `[1G`: move the cursor to the beginning of the line\n\t\t\t*\n\t\t\t* [1]: https://en.wikipedia.org/wiki/ANSI_escape_code\n\t\t\t*/\n\t\t\tvar str = '\\u001b[1T\\u001b[1G';\n\t\t\tpres._repl._ostream.write( str );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `currentSlide` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Returns the current presentation slide index.\n\t*\n\t* ## Notes\n\t*\n\t* -   The returned index is the nominal (i.e., one-based) slide index.\n\t*\n\t* @private\n\t* @returns {integer} current presentation slide index\n\t*/\n\tfunction onCommand() {\n\t\treturn pres.currentSlide;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `end` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Jumps to the last fragment of the last slide.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.end().show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `first` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Jumps to the first slide.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.first().show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `firstFragment` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Jumps to the first fragment of the current slide.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.firstFragment().show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'repl:presentation:command:jump' );\n\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `jump` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Jumps a specified number of slides.\n\t*\n\t* @private\n\t* @param {integer} n - number of slides to jump\n\t*/\n\tfunction onCommand( n ) {\n\t\tvar err;\n\t\tif ( !isInteger( n ) ) {\n\t\t\terr = new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', n ) );\n\t\t\tdebug( 'Error: %s', err.message );\n\t\t\tpres._repl._ostream.write( 'Error: '+err.message+'\\n' );\n\t\t\treturn;\n\t\t}\n\t\tpres._repl.once( 'drain', onDrain );\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.jump( n ).show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'repl:presentation:command:jump_to' );\n\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `jumpTo` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Jumps to a specified slide.\n\t*\n\t* @private\n\t* @param {PositiveInteger} n - nominal slide number (one-based)\n\t*/\n\tfunction onCommand( n ) {\n\t\tvar err;\n\t\tif ( !isPositiveInteger( n ) ) {\n\t\t\terr = new TypeError( format( 'invalid argument. Must provide a positive integer. Value: `%s`.', n ) );\n\t\t\tdebug( 'Error: %s', err.message );\n\t\t\tpres._repl._ostream.write( 'Error: '+err.message+'\\n' );\n\t\t\treturn;\n\t\t}\n\t\tpres._repl.once( 'drain', onDrain );\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.jumpTo( n ).show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `last` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Jumps to the last slide.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.last().show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `lastFragment` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Jumps to the last fragment of the current slide.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.lastFragment().show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'repl:presentation:command:load_presentation' );\n\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `loadPresentation` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Loads a presentation from a file.\n\t*\n\t* ## Notes\n\t*\n\t* -   Relative file paths are resolved relative to the current working directory.\n\t*\n\t* @private\n\t* @param {string} file - file path\n\t*/\n\tfunction onCommand( file ) {\n\t\tvar err;\n\t\tif ( !isString( file ) ) {\n\t\t\terr = new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', file ) );\n\t\t\tdebug( 'Error: %s', err.message );\n\t\t\tpres._repl._ostream.write( 'Error: '+err.message+'\\n' );\n\t\t\treturn;\n\t\t}\n\t\tpres._repl.once( 'drain', onDrain );\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tvar pos;\n\t\t\ttry {\n\t\t\t\tpres.load( file ).show();\n\t\t\t} catch ( error ) {\n\t\t\t\tdebug( 'Error: %s', error.message );\n\n\t\t\t\t// Infer the current cursor column position based on the length of the command prompt string:\n\t\t\t\tpos = pres._repl._prompt().length; // FIXME: how to address multi-column characters?\n\n\t\t\t\t// FIXME: handle non-TTY output streams!\n\n\t\t\t\t/*\n\t\t\t\t* Print the error message on the previous line and generate the expected display prompt and cursor position.\n\t\t\t\t*\n\t\t\t\t* [ANSI escape sequences][1]:\n\t\t\t\t*\n\t\t\t\t* -   `\\u001b`: ESC, the escape character\n\t\t\t\t* -   `[1A`: move cursor up one line\n\t\t\t\t* -   `[nD`: move cursor back (to the left) `n` columns (cells)\n\t\t\t\t* -   `[0J`: clear the screen beginning from the current cursor position to the end of the screen\n\t\t\t\t*\n\t\t\t\t* [1]: https://en.wikipedia.org/wiki/ANSI_escape_code\n\t\t\t\t*/\n\t\t\t\tpres._repl._ostream.write( '\\u001b[1A\\u001b['+pos+'DError: '+error.message+'\\u001b[0J\\n' );\n\n\t\t\t\t// Show a new display prompt:\n\t\t\t\tpres._repl._displayPrompt();\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `next` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Proceeds to the next presentation slide or slide fragment.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.next().show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `nextSlide` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Proceeds to the next presentation slide.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.nextSlide().show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `numSlides` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Returns the presentation length.\n\t*\n\t* @private\n\t* @returns {integer} presentation length\n\t*/\n\tfunction onCommand() {\n\t\treturn pres.length;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar MSG = [\n\t'',\n\t'    pres()                h()    Print presentation help text.',\n\t'',\n\t'    next()                n()    Move to the next slide or slide fragment.',\n\t'    nextSlide()           N()    Move to the next slide.',\n\t'    prev()                p()    Move to the previous slide or slide fragment.',\n\t'    prevSlide()           P()    Move to the previous slide.',\n\t'',\n\t'    jump()                g()    Jump a specified number of slides.',\n\t'    jumpTo()              j()    Jump to a specified slide.',\n\t'    first()               f()    Jump to the first slide.',\n\t'    last()                l()    Jump to the first fragment of the last slide.',\n\t'    end()                 L()    Jump to the last fragment of the last slide.',\n\t'',\n\t'    firstFragment()       ff()   Jump to the first slide fragment.',\n\t'    lastFragment()        lf()   Jump to the last slide fragment.',\n\t'',\n\t'    blank()               b()    Render a blank screen.',\n\t'    redraw()              rd()   Redraw the current slide.',\n\t'',\n\t'    runSlide()            r()    Run slide code.',\n\t'',\n\t'    watch()               w()    Watch a presentation file for changes.',\n\t'    unwatch()             uw()   Stop watching a presentation file for changes.',\n\t'',\n\t'    loadPresentation()    lp()   Load a presentation.',\n\t'    reloadPresentation()  rlp()  Reload the current presentation.',\n\t'    renderSlide()                Render the current slide.',\n\t'',\n\t'    currentSlide                 Current slide index.',\n\t'    numSlides                    Number of slides.',\n\t'',\n\t''\n].join( '\\n' );\n\n\n// EXPORTS //\n\nmodule.exports = MSG;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar HELP = require( './../help_text.js' );\n\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `pres` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Prints presentation help text.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl._ostream.write( HELP ); // eslint-disable-line no-underscore-dangle\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `prev` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Proceeds to the previous presentation slide or slide fragment.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.prev().show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `prevSlide` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Moves to the previous presentation slide.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.prevSlide().show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `redraw` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Redraws the current presentation slide.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.show();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'repl:presentation:command:reload_presentation' );\n\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `reloadPresentation` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Reloads a presentation.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain );\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tvar pos;\n\t\t\ttry {\n\t\t\t\tpres.reload().show();\n\t\t\t} catch ( error ) {\n\t\t\t\tdebug( 'Error: %s', error.message );\n\n\t\t\t\t// Infer the current cursor column position based on the length of the command prompt string:\n\t\t\t\tpos = pres._repl._prompt().length; // FIXME: how to address multi-column characters?\n\n\t\t\t\t// FIXME: handle non-TTY output streams!\n\n\t\t\t\t/*\n\t\t\t\t* Print the error message on the previous line and generate the expected display prompt and cursor position.\n\t\t\t\t*\n\t\t\t\t* [ANSI escape sequences][1]:\n\t\t\t\t*\n\t\t\t\t* -   `\\u001b`: ESC, the escape character\n\t\t\t\t* -   `[1A`: move cursor up one line\n\t\t\t\t* -   `[nD`: move cursor back (to the left) `n` columns (cells)\n\t\t\t\t* -   `[0J`: clear the screen beginning from the current cursor position to the end of the screen\n\t\t\t\t*\n\t\t\t\t* [1]: https://en.wikipedia.org/wiki/ANSI_escape_code\n\t\t\t\t*/\n\t\t\t\tpres._repl._ostream.write( '\\u001b[1A\\u001b['+pos+'DError: '+error.message+'\\u001b[0J\\n' );\n\n\t\t\t\t// Show a new display prompt:\n\t\t\t\tpres._repl._displayPrompt();\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `renderSlide` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Renders the current presentation slide.\n\t*\n\t* @private\n\t* @returns {(string|null)} rendered slide\n\t*/\n\tfunction onCommand() {\n\t\treturn pres.render();\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar noop = require( '@stdlib/utils-noop' );\n\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `runSlide` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Runs slide code.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres._repl.once( 'drain', onDrain ); // eslint-disable-line no-underscore-dangle\n\n\t\t/**\n\t\t* Callback invoked upon a `drain` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onDrain() {\n\t\t\tpres.run( noop );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `unwatch` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Stops watching a source presentation file for changes.\n\t*\n\t* @private\n\t* @param {Error} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction onCommand( error ) {\n\t\tif ( arguments.length ) {\n\t\t\tpres.unwatch( error );\n\t\t\treturn;\n\t\t}\n\t\tpres.unwatch();\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a callback to be invoked upon calling the `watch` command.\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {Function} callback\n*/\nfunction command( pres ) {\n\treturn onCommand;\n\n\t/**\n\t* Watches a source presentation file for changes.\n\t*\n\t* @private\n\t*/\n\tfunction onCommand() {\n\t\tpres.watch();\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = command;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar onBlank = require( './commands/blank.js' );\nvar onCurrentSlide = require( './commands/current_slide.js' );\nvar onEnd = require( './commands/end.js' );\nvar onFirst = require( './commands/first.js' );\nvar onFirstFragment = require( './commands/first_fragment.js' );\nvar onJump = require( './commands/jump.js' );\nvar onJumpTo = require( './commands/jump_to.js' );\nvar onLast = require( './commands/last.js' );\nvar onLastFragment = require( './commands/last_fragment.js' );\nvar onLoadPresentation = require( './commands/load_presentation.js' );\nvar onNext = require( './commands/next.js' );\nvar onNextSlide = require( './commands/next_slide.js' );\nvar onNumSlides = require( './commands/num_slides.js' );\nvar onPres = require( './commands/pres.js' );\nvar onPrev = require( './commands/prev.js' );\nvar onPrevSlide = require( './commands/prev_slide.js' );\nvar onRedraw = require( './commands/redraw.js' );\nvar onReloadPresentation = require( './commands/reload_presentation.js' );\nvar onRenderSlide = require( './commands/render_slide.js' );\nvar onRunSlide = require( './commands/run_slide.js' );\nvar onUnwatch = require( './commands/unwatch.js' );\nvar onWatch = require( './commands/watch.js' );\n\n\n// MAIN //\n\n/**\n* Returns a list of REPL presentation-specific commands.\n*\n* ## Notes\n*\n* -   Each array element is comprised as follows:\n*\n*     ```text\n*     [ <command>, <shortcut>, <function>, <is_accessor> ]\n*     ```\n*\n*     where the first element is the command alias, the second element is the command alias shortcut, the third element the command callback, and the fourth element a boolean indicating whether the callback is an accessor (getter; i.e., the command refers to a property rather than a function to be explicitly invoked).\n*\n* @private\n* @param {Presentation} pres - presentation instance\n* @returns {ArrayArray} commands\n*/\nfunction commands( pres ) {\n\tvar cmds;\n\n\t// Define a list of REPL presentation-specific commands (NOTE: keep in alphabetical order):\n\tcmds = [];\n\tcmds.push( [ 'blank', 'b', onBlank( pres ), false ] );\n\tcmds.push( [ 'currentSlide', '', onCurrentSlide( pres ), true ] );\n\tcmds.push( [ 'end', 'L', onEnd( pres ), false ] );\n\tcmds.push( [ 'first', 'f', onFirst( pres ), false ] );\n\tcmds.push( [ 'firstFragment', 'ff', onFirstFragment( pres ), false ] );\n\tcmds.push( [ 'jump', 'g', onJump( pres ), false ] );\n\tcmds.push( [ 'jumpTo', 'j', onJumpTo( pres ), false ] );\n\tcmds.push( [ 'last', 'l', onLast( pres ), false ] );\n\tcmds.push( [ 'lastFragment', 'lf', onLastFragment( pres ), false ] );\n\tcmds.push( [ 'loadPresentation', 'lp', onLoadPresentation( pres ), false ] );\n\tcmds.push( [ 'next', 'n', onNext( pres ), false ] );\n\tcmds.push( [ 'nextSlide', 'N', onNextSlide( pres ), false ] );\n\tcmds.push( [ 'numSlides', '', onNumSlides( pres ), true ] );\n\tcmds.push( [ 'pres', 'h', onPres( pres ), false ] );\n\tcmds.push( [ 'prev', 'p', onPrev( pres ), false ] );\n\tcmds.push( [ 'prevSlide', 'P', onPrevSlide( pres ), false ] );\n\tcmds.push( [ 'redraw', 'rd', onRedraw( pres ), false ] );\n\tcmds.push( [ 'reloadPresentation', 'rlp', onReloadPresentation( pres ), false ] );\n\tcmds.push( [ 'renderSlide', '', onRenderSlide( pres ), false ] );\n\tcmds.push( [ 'runSlide', 'r', onRunSlide( pres ), false ] );\n\tcmds.push( [ 'unwatch', 'uw', onUnwatch( pres ), false ] );\n\tcmds.push( [ 'watch', 'w', onWatch( pres ), false ] );\n\n\treturn cmds;\n}\n\n\n// EXPORTS //\n\nmodule.exports = commands;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar setReadOnly = require( '@stdlib/utils-define-configurable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils-define-configurable-read-only-accessor' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'repl:presentation:set_commands' );\n\n\n// MAIN //\n\n/**\n* Sets commands on a REPL `context` object.\n*\n* @private\n* @param {Object} context - context object\n* @param {ArrayArray} commands - commands\n* @returns {Object} context object\n*/\nfunction setCommands( context, commands ) {\n\tvar cmd;\n\tvar i;\n\n\tfor ( i = 0; i < commands.length; i++ ) {\n\t\tcmd = commands[ i ];\n\n\t\t// Set alias...\n\t\tif ( hasOwnProp( context, cmd[ 0 ] ) ) {\n\t\t\tdebug( 'Skipping command as global context property `'+cmd[0]+'` is already assigned.' );\n\t\t} else if ( cmd[ 3 ] ) {\n\t\t\tsetReadOnlyAccessor( context, cmd[ 0 ], cmd[ 2 ] );\n\t\t} else {\n\t\t\tsetReadOnly( context, cmd[ 0 ], cmd[ 2 ] );\n\t\t}\n\t\t// Set alias shortcut...\n\t\tif ( cmd[ 1 ] ) {\n\t\t\tif ( hasOwnProp( context, cmd[ 1 ] ) ) {\n\t\t\t\tdebug( 'Skipping command shortcut as global context property `'+cmd[1]+'` is already assigned.' );\n\t\t\t} else if ( cmd[ 3 ] ) {\n\t\t\t\tsetReadOnlyAccessor( context, cmd[ 1 ], cmd[ 2 ] );\n\t\t\t} else {\n\t\t\t\tsetReadOnly( context, cmd[ 1 ], cmd[ 2 ] );\n\t\t\t}\n\t\t}\n\t}\n\treturn context;\n}\n\n\n// EXPORTS //\n\nmodule.exports = setCommands;\n", "{\"blank\":\"\\nblank()\\n    Renders a blank screen.\\n\\n    Examples\\n    --------\\n    > blank();\\n\\n    See Also\\n    --------\\n    next, nextSlide, prev, prevSlide, redraw\\n\\n\",\"currentSlide\":\"\\ncurrentSlide\\n    Returns the current presentation slide index.\\n\\n    The returned index is the nominal (i.e., one-based) slide index.\\n\\n    Returns\\n    -------\\n    idx: integer\\n        Current presentation slide index.\\n\\n    Examples\\n    --------\\n    > currentSlide\\n\\n    See Also\\n    --------\\n    jumpTo, next, numSlides, prev\\n\\n\",\"end\":\"\\nend()\\n    Jumps to the last fragment of the last slide.\\n\\n    Examples\\n    --------\\n    > end();\\n\\n    See Also\\n    --------\\n    first, jumpTo, last, next, prev\\n\\n\",\"first\":\"\\nfirst()\\n    Jumps to the first slide.\\n\\n    Examples\\n    --------\\n    > first();\\n\\n    See Also\\n    --------\\n    end, jumpTo, last, next, prev\\n\\n\",\"firstFragment\":\"\\nfirstFragment()\\n    Jumps to the first fragment of the current slide.\\n\\n    Examples\\n    --------\\n    > firstFragment();\\n\\n    See Also\\n    --------\\n    lastFragment, next, prev\\n\\n\",\"jump\":\"\\njump( n )\\n    Jumps a specified number of slides.\\n\\n    Parameters\\n    ----------\\n    n: integer\\n    \\tNumber of slides to jump.\\n\\n    Examples\\n    --------\\n    // Jump two slides forward:\\n    > jump( 2 );\\n\\n    // Jump two slides backward:\\n    > jump( -2 );\\n\\n    See Also\\n    --------\\n    jumpTo, next, prev\\n\\n\",\"jumpTo\":\"\\njumpTo( n )\\n    Jumps to a specified slide, where `n` is the nominal slide number.\\n\\n    Parameters\\n    ----------\\n    n: integer\\n    \\tNominal slide number (one-based).\\n\\n    Examples\\n    --------\\n    > jumpTo( 2 );\\n\\n    See Also\\n    --------\\n    jump, next, prev\\n\\n\",\"last\":\"\\nlast()\\n    Jumps to the last slide.\\n\\n    Examples\\n    --------\\n    > last();\\n\\n    See Also\\n    --------\\n    end, first, jumpTo, next, prev\\n\\n\",\"lastFragment\":\"\\nlastFragment()\\n    Jumps to the last fragment of the current slide.\\n\\n    Examples\\n    --------\\n    > lastFragment();\\n\\n    See Also\\n    --------\\n    firstFragment, next, prev\\n\\n\",\"loadPresentation\":\"\\nloadPresentation( file )\\n    Loads a presentation from a file.\\n\\n    Relative file paths are resolved relative to the current working directory.\\n\\n    Parameters\\n    ----------\\n    file: string\\n    \\tFile path.\\n\\n    Examples\\n    --------\\n    > loadPresentation( './path/to/presentation.txt' );\\n\\n    See Also\\n    --------\\n    reloadPresentation\\n\\n\",\"next\":\"\\nnext()\\n    Moves the presentation to the next slide or slide fragment.\\n\\n    Examples\\n    --------\\n    > next();\\n\\n    See Also\\n    --------\\n    first, jumpTo, last, nextSlide, prev\\n\\n\",\"nextSlide\":\"\\nnextSlide()\\n    Moves the presentation to the next slide.\\n\\n    Examples\\n    --------\\n    > nextSlide();\\n\\n    See Also\\n    --------\\n    first, jumpTo, last, next, prev, prevSlide\\n\\n\",\"numSlides\":\"\\nnumSlides\\n    Returns the presentation length.\\n\\n    Returns\\n    -------\\n    len: integer\\n        Number of slides.\\n\\n    Examples\\n    --------\\n    > numSlides\\n\\n    See Also\\n    --------\\n    currentSlide, jumpTo, next, prev\\n\\n\",\"pres\":\"\\npres()\\n    Prints presentation help text and shortcuts.\\n\\n    Examples\\n    --------\\n    > pres();\\n\\n    See Also\\n    --------\\n    help, info\\n\\n\",\"prev\":\"\\nprev()\\n    Moves the presentation to the previous slide or slide fragment.\\n\\n    Examples\\n    --------\\n    > prev();\\n\\n    See Also\\n    --------\\n    first, jumpTo, last, next, prevSlide\\n\\n\",\"prevSlide\":\"\\nprevSlide()\\n    Moves the presentation to the previous slide.\\n\\n    Examples\\n    --------\\n    > prevSlide();\\n\\n    See Also\\n    --------\\n    first, jumpTo, last, next, nextSlide, prev\\n\\n\",\"redraw\":\"\\nredraw()\\n    Redraws the current presentation slide.\\n\\n    Examples\\n    --------\\n    > redraw();\\n\\n    See Also\\n    --------\\n    next, nextSlide, prev, prevSlide, reloadPresentation\\n\\n\",\"reloadPresentation\":\"\\nreloadPresentation( file )\\n    Reloads a presentation.\\n\\n    Examples\\n    --------\\n    > reloadPresentation();\\n\\n    See Also\\n    --------\\n    loadPresentation, redraw\\n\\n\",\"renderSlide\":\"\\nrenderSlide()\\n    Renders the current presentation slide.\\n\\n    Examples\\n    --------\\n    > renderSlide()\\n\\n    See Also\\n    --------\\n    load\\n\\n\",\"runSlide\":\"\\nrunSlide()\\n    Runs slide code.\\n\\n    Examples\\n    --------\\n    > runSlide()\\n\\n    See Also\\n    --------\\n    next, prev\\n\\n\",\"unwatch\":\"\\nunwatch( [error] )\\n    Stops watching a presentation file for changes.\\n\\n    Parameters\\n    ----------\\n    error: Error (optional)\\n    \\tError object.\\n\\n    Examples\\n    --------\\n    > unwatch();\\n\\n    See Also\\n    --------\\n    loadPresentation, redraw, reloadPresentation, watch\\n\\n\",\"watch\":\"\\nwatch()\\n    Watches a presentation source file for changes.\\n\\n    \\\"Renaming\\\" a source file is *not* tracked. If a source presentation file is\\n    renamed, watching stops.\\n\\n    Examples\\n    --------\\n    > watch();\\n\\n    See Also\\n    --------\\n    loadPresentation, redraw, reloadPresentation, unwatch\\n\\n\"}", "{\"blank\":\"\\nblank()\\n    Renders a blank screen.\\n\",\"currentSlide\":\"\\ncurrentSlide\\n    Returns the current presentation slide index.\\n\",\"end\":\"\\nend()\\n    Jumps to the last fragment of the last slide.\\n\",\"first\":\"\\nfirst()\\n    Jumps to the first slide.\\n\",\"firstFragment\":\"\\nfirstFragment()\\n    Jumps to the first fragment of the current slide.\\n\",\"jump\":\"\\njump( n )\\n    Jumps a specified number of slides.\\n\",\"jumpTo\":\"\\njumpTo( n )\\n    Jumps to a specified slide, where `n` is the nominal slide number.\\n\",\"last\":\"\\nlast()\\n    Jumps to the last slide.\\n\",\"lastFragment\":\"\\nlastFragment()\\n    Jumps to the last fragment of the current slide.\\n\",\"loadPresentation\":\"\\nloadPresentation( file )\\n    Loads a presentation from a file.\\n\",\"next\":\"\\nnext()\\n    Moves the presentation to the next slide or slide fragment.\\n\",\"nextSlide\":\"\\nnextSlide()\\n    Moves the presentation to the next slide.\\n\",\"numSlides\":\"\\nnumSlides\\n    Returns the presentation length.\\n\",\"pres\":\"\\npres()\\n    Prints presentation help text and shortcuts.\\n\",\"prev\":\"\\nprev()\\n    Moves the presentation to the previous slide or slide fragment.\\n\",\"prevSlide\":\"\\nprevSlide()\\n    Moves the presentation to the previous slide.\\n\",\"redraw\":\"\\nredraw()\\n    Redraws the current presentation slide.\\n\",\"reloadPresentation\":\"\\nreloadPresentation( file )\\n    Reloads a presentation.\\n\",\"renderSlide\":\"\\nrenderSlide()\\n    Renders the current presentation slide.\\n\",\"runSlide\":\"\\nrunSlide()\\n    Runs slide code.\\n\",\"unwatch\":\"\\nunwatch( [error] )\\n    Stops watching a presentation file for changes.\\n\",\"watch\":\"\\nwatch()\\n    Watches a presentation source file for changes.\\n\"}", "{\"blank\":\"blank();\\n\",\"currentSlide\":\"currentSlide\\n\",\"end\":\"end();\\n\",\"first\":\"first();\\n\",\"firstFragment\":\"firstFragment();\\n\",\"jump\":\"jump( 2 );\\njump( -2 );\\n\",\"jumpTo\":\"jumpTo( 2 );\\n\",\"last\":\"last();\\n\",\"lastFragment\":\"lastFragment();\\n\",\"loadPresentation\":\"loadPresentation( './path/to/presentation.txt' );\\n\",\"next\":\"next();\\n\",\"nextSlide\":\"nextSlide();\\n\",\"numSlides\":\"numSlides\\n\",\"pres\":\"pres();\\n\",\"prev\":\"prev();\\n\",\"prevSlide\":\"prevSlide();\\n\",\"redraw\":\"redraw();\\n\",\"reloadPresentation\":\"reloadPresentation();\\n\",\"renderSlide\":\"renderSlide()\\n\",\"runSlide\":\"runSlide()\\n\",\"unwatch\":\"unwatch();\\n\",\"watch\":\"watch();\\n\"}", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar HELP = require( './../data/help.json' );\nvar INFO = require( './../data/info.json' );\nvar EXAMPLE = require( './../data/example.json' );\n\n\n// MAIN //\n\nvar DOCS = {\n\t'help': HELP,\n\t'info': INFO,\n\t'example': EXAMPLE\n};\n\n\n// EXPORTS //\n\nmodule.exports = DOCS;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-invalid-this, no-restricted-syntax */\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar watchFile = require( 'fs' ).watch; // TODO: replace with stdlib pkg\nvar EventEmitter = require( 'events' ).EventEmitter;\nvar logger = require( 'debug' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar setNonEnumerableReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar setNonEnumerableReadOnlyAccessor = require( '@stdlib/utils-define-nonenumerable-read-only-accessor' ); // eslint-disable-line id-length\nvar setNonEnumerable = require( '@stdlib/utils-define-nonenumerable-property' );\nvar clamp = require( '@stdlib/math-base-special-clamp' );\nvar wrap = require( '@stdlib/math-base-special-wrap' );\nvar readFile = require( '@stdlib/fs-read-file' ).sync;\nvar repeat = require( '@stdlib/string-repeat' );\nvar constructorName = require( '@stdlib/utils-constructor-name' );\nvar cwd = require( '@stdlib/process-cwd' );\nvar inherit = require( '@stdlib/utils-inherit' );\nvar nextTick = require( '@stdlib/utils-next-tick' );\nvar format = require( '@stdlib/string-format' );\nvar formatLines = require( './format.js' );\nvar defaults = require( './defaults.js' );\nvar validate = require( './validate.js' );\nvar parse = require( './parse.js' );\nvar footer = require( './footer.js' );\nvar blankLine = require( './blank_line.js' );\nvar commands = require( './commands.js' );\nvar setCommands = require( './set_commands.js' );\nvar DOCS = require( './docs.js' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'repl:presentation' );\nvar DEFAULT_WIDTH = 80;\nvar DEFAULT_HEIGHT = 25;\n\n\n// MAIN //\n\n/**\n* Presentation constructor.\n*\n* @private\n* @constructor\n* @param {string} [text] - presentation text\n* @param {REPL} repl - REPL instance\n* @param {Options} [options] - function options\n* @param {string} [options.borderTop='*'] - top border character sequence\n* @param {string} [options.borderBottom='*'] - bottom border character sequence\n* @param {string} [options.borderLeft='* '] - left border character sequence\n* @param {string} [options.borderRight=' *'] - right border character sequence\n* @param {(boolean|string)} [options.counter=false] - slide counter\n* @param {(PositiveInteger|null)} [options.width=null] - presentation width\n* @param {(PositiveInteger|null)} [options.height=null] - presentation height\n* @param {string} [options.workspace=\"presentation\"] - REPL workspace name\n* @param {string} [options.load] - file path specifying a presentation file to load\n* @param {boolean} [options.autoClear=true] - boolean indicating whether to automatically clear the screen before writing a rendered slide to the REPL\n* @param {boolean} [options.loop=false] - boolean indicating whether to \"loop\" a presentation\n* @throws {Error} must provide a REPL instance\n* @throws {TypeError} presentation text argument must be a string\n* @throws {TypeError} REPL argument must be a REPL instance\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nfunction Presentation() { // eslint-disable-line stdlib/no-redeclare\n\tvar options;\n\tvar nargs;\n\tvar text;\n\tvar repl;\n\tvar cmds;\n\tvar opts;\n\tvar self;\n\tvar err;\n\tvar cmd;\n\tvar FLG;\n\tvar d;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( !( this instanceof Presentation) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\tthrow new Error( 'invalid invocation. Insufficient arguments. Must provide a REPL instance.' );\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Presentation( arguments[ 0 ] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Presentation( arguments[ 0 ], arguments[ 1 ] );\n\t\t}\n\t\treturn new Presentation( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] ); // eslint-disable-line max-len\n\t}\n\tif ( nargs === 0 ) {\n\t\tthrow new Error( 'invalid invocation. Insufficient arguments. Must provide a REPL instance.' );\n\t}\n\topts = defaults();\n\tif ( nargs === 1 ) {\n\t\trepl = arguments[ 0 ];\n\t} else if ( nargs === 2 ) {\n\t\tif ( isString( arguments[ 0 ] ) ) {\n\t\t\ttext = arguments[ 0 ];\n\t\t\trepl = arguments[ 1 ];\n\t\t} else {\n\t\t\trepl = arguments[ 0 ];\n\t\t\toptions = arguments[ 1 ];\n\t\t\terr = validate( opts, options );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t} else { // nargs === 3\n\t\ttext = arguments[ 0 ];\n\t\tif ( !isString( text ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Presentation text must be a string. Value: `%s`.', text ) );\n\t\t}\n\t\trepl = arguments[ 1 ];\n\t\toptions = arguments[ 2 ];\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( constructorName( repl ) !== 'REPL' ) {\n\t\tthrow new TypeError( format( 'invalid argument. REPL argument must be a REPL instance. Value: `%s`.', repl ) );\n\t}\n\tself = this;\n\tdebug( 'Options: %s', JSON.stringify( opts ) );\n\n\t// Call the parent constructor:\n\tEventEmitter.call( this );\n\n\tsetNonEnumerableReadOnly( this, '_repl', repl );\n\tsetNonEnumerableReadOnly( this, '_opts', opts );\n\tsetNonEnumerable( this, '_source', '' );\n\tsetNonEnumerable( this, '_watcher', null );\n\n\tsetNonEnumerableReadOnly( this, '_slides', [] );\n\tsetNonEnumerable( this, '_slide', null );\n\n\tsetNonEnumerable( this, '_slideCursor', -1 );\n\tsetNonEnumerable( this, '_fragmentCursor', 0 );\n\n\t// Switch to a \"presentation\" workspace:\n\tFLG = repl._quiet;\n\trepl._quiet = true;\n\trepl._context.workspace( opts.workspace );\n\trepl._quiet = FLG;\n\n\t// Add presentation commands:\n\tcmds = commands( this );\n\tsetCommands( repl._context, cmds );\n\n\t// Load presentation command documentation into the REPL environment...\n\tfor ( i = 0; i < cmds.length; i++ ) {\n\t\tcmd = cmds[ i ];\n\t\td = DOCS.help[ cmd[ 0 ] ];\n\t\tif ( d ) {\n\t\t\trepl._context.userDoc( cmd[ 0 ], cmd[ 2 ], d ); // full command\n\t\t\trepl._context.userDoc( cmd[ 1 ], cmd[ 2 ], d ); // shortcut\n\t\t}\n\t}\n\t// Check whether to parse a provided presentation text or load a presentation file...\n\tif ( text ) {\n\t\tparse( this._slides, text );\n\t\tthis._slide = this._slides[ 0 ] || null;\n\t\tthis._slideCursor = 0;\n\t\tthis._fragmentCursor = 0;\n\t} else if ( opts.load ) {\n\t\tthis.load( opts.load );\n\t}\n\t// Perform any clean-up tasks upon closing the REPL environment:\n\trepl.on( 'exit', onClose );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon closing a REPL environment.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tdebug( 'REPL environment closed. Performing presentation clean-up tasks.' );\n\t\tself.unwatch();\n\t}\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Presentation, EventEmitter );\n\n// NOTE: keep properties and methods in alphabetical order...\n\n/**\n* Sets the current slide (and slide fragment).\n*\n* @private\n* @name _select\n* @memberof Presentation.prototype\n* @type {Function}\n* @param {integer} n - slide number (zero-based)\n* @param {integer} [fragment=0] - slide fragment\n* @returns {(Object|null)} selected slide\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, '_select', function select( n, fragment ) {\n\tvar sc;\n\tvar fc;\n\tvar N;\n\n\t// Limit the slide cursor range in order to avoid multiple previous/next calls moving the cursors indefinitely away from the slide deck...\n\tN = this.length;\n\tif ( this._opts.loop ) {\n\t\tsc = wrap( n, 0, N );\n\t} else {\n\t\tsc = clamp( n, -1, N );\n\t}\n\tif ( sc === -1 || sc === N ) {\n\t\tdebug( 'Unable to select slide. Slide cursor out-of-range.' );\n\t\tthis._slide = null;\n\t} else {\n\t\tthis._slide = this._slides[ sc ];\n\t}\n\tif ( this._slide && arguments.length > 1 ) {\n\t\t// Limit the slide fragment cursor range:\n\t\tN = this._slide.fragments.length;\n\t\tfc = clamp( fragment, -1, N );\n\t\tif ( fc === -1 || fc === N ) {\n\t\t\tdebug( 'Unable to select slide fragment. Fragment cursor out-of-range.' );\n\t\t\tthis._slide = null;\n\t\t}\n\t} else {\n\t\tfc = 0;\n\t}\n\tif ( this._slide ) {\n\t\tdebug( 'Selected slide %d and fragment %d.', sc, fc );\n\t\tthis._slideCursor = sc;\n\t\tthis._fragmentCursor = fc;\n\t}\n\treturn this._slide;\n});\n\n/**\n* Returns the current presentation slide index.\n*\n* ## Notes\n*\n* -   The returned index is the nominal (i.e., one-based) slide index.\n*\n* @name currentSlide\n* @memberof Presentation.prototype\n* @type {integer}\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Return the current presentation slide index:\n* var idx = pres.currentSlide;\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnlyAccessor( Presentation.prototype, 'currentSlide', function getCurrentSlide() {\n\treturn this._slideCursor + 1;\n});\n\n/**\n* Jumps to the last fragment of the last slide.\n*\n* @name end\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Jump to the last fragment of the last slide:\n* pres.end();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'end', function end() {\n\tvar s = this._slides[ this.length-1 ];\n\tif ( s ) {\n\t\tdebug( 'Jumping to the last fragment of the last slide.' );\n\t\tthis._select( this.length-1, s.fragments.length-1 );\n\t}\n\treturn this;\n});\n\n/**\n* Jumps to the first slide.\n*\n* @name first\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Move to the first slide:\n* pres.first();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'first', function first() {\n\tdebug( 'Jumping to the first slide.' );\n\tthis._select( 0 );\n\treturn this;\n});\n\n/**\n* Jumps to the first fragment of the current slide.\n*\n* @name firstFragment\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Jump to the first fragment of the current slide:\n* pres.firstFragment();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'firstFragment', function firstFragment() {\n\tdebug( 'Jumping to the first fragment of the current slide.' );\n\tthis._select( this._slideCursor, 0 );\n\treturn this;\n});\n\n/**\n* Returns the presentation height.\n*\n* @name height\n* @memberof Presentation.prototype\n* @type {PositiveInteger}\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // Return the presentation height:\n* var height = pres.height;\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnlyAccessor( Presentation.prototype, 'height', function getHeight() {\n\tif ( this._opts.height ) {\n\t\treturn this._opts.height;\n\t}\n\tif ( this._repl._ostream.isTTY ) {\n\t\treturn this._repl._ostream.rows;\n\t}\n\treturn DEFAULT_HEIGHT;\n});\n\n/**\n* Jumps a specified number of slides.\n*\n* @name jump\n* @memberof Presentation.prototype\n* @type {Function}\n* @param {integer} n - number of slides to jump\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Jump to the third previous slide:\n* pres.jump( -3 );\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'jump', function jump( n ) {\n\tif ( !isInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', n ) );\n\t}\n\tn = clamp( this.currentSlide+n, 1, this.length ) - 1;\n\n\tdebug( 'Jumping to slide %d.', n );\n\tthis._select( n );\n\n\treturn this;\n});\n\n/**\n* Jumps to a specified slide number.\n*\n* ## Notes\n*\n* -   This method expects the nominal (i.e., one-based) slide number.\n*\n* @name jumpTo\n* @memberof Presentation.prototype\n* @type {Function}\n* @param {integer} n - slide number (one-based)\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Jump to a particular slide:\n* pres.jumpTo( 1 );\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'jumpTo', function jumpTo( n ) {\n\tif ( !isInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', n ) );\n\t}\n\tdebug( 'Jumping to slide %d.', n-1 );\n\tthis._select( n-1 );\n\treturn this;\n});\n\n/**\n* Jumps to the last slide.\n*\n* @name last\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Move to the last slide:\n* pres.last();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'last', function last() {\n\tdebug( 'Jumping to the last slide.' );\n\tthis._select( this.length-1 );\n\treturn this;\n});\n\n/**\n* Jumps to the last fragment of the current slide.\n*\n* @name lastFragment\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Jump to the last fragment of the current slide:\n* pres.lastFragment();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'lastFragment', function lastFragment() {\n\tdebug( 'Jumping to the last fragment of the current slide.' );\n\tif ( this._slide ) {\n\t\tthis._select( this._slideCursor, this._slide.fragments.length-1 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns the presentation length.\n*\n* @name length\n* @memberof Presentation.prototype\n* @type {integer}\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Return the presentation length:\n* var len = pres.length;\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnlyAccessor( Presentation.prototype, 'length', function getLength() {\n\treturn this._slides.length;\n});\n\n/**\n* Loads a presentation from a file.\n*\n* ## Notes\n*\n* -   Relative file paths are resolved relative to the current working directory.\n*\n* @name load\n* @memberof Presentation.prototype\n* @type {Function}\n* @param {string} file - file path\n* @throws {TypeError} must provide a valid file path\n* @throws {Error} unable to read file path\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Load a presentation from a file:\n* try {\n*     pres.load( './path/to/presentation/file.txt' );\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'load', function load( file ) {\n\tvar fpath;\n\tvar FLG;\n\tif ( !isString( file ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', file ) );\n\t}\n\t// Stop watching any prior presentation files regardless as to whether we can successfully load a presentation file from the specified file path...\n\tif ( this._watcher ) {\n\t\tFLG = true;\n\t\tthis.unwatch();\n\t}\n\tdebug( 'Attempting to load source presentation file: %s', file );\n\tfpath = resolve( cwd(), file );\n\tdebug( 'Resolved file path: %s', fpath );\n\n\t// Attempt to load the presentation file:\n\tfile = readFile( fpath, {\n\t\t'encoding': 'utf8'\n\t});\n\tif ( file instanceof Error ) {\n\t\tthrow file;\n\t}\n\tdebug( 'Successfully loaded source presentation file.' );\n\n\t// Cache source filename:\n\tthis._source = fpath;\n\n\t// Reset the presentation slides:\n\tthis._slides.length = 0;\n\n\t// Parse the loaded file into presentation slides:\n\tparse( this._slides, file );\n\n\t// Set the current slide:\n\tthis._slide = this._slides[ 0 ] || null;\n\n\t// Set the slide cursors:\n\tthis._slideCursor = 0;\n\tthis._fragmentCursor = 0;\n\n\t// If we were watching a prior presentation file, start watching the new presentation file...\n\tif ( FLG ) {\n\t\tthis.watch();\n\t}\n\treturn this;\n});\n\n/**\n* Proceeds to the next slide or slide fragment.\n*\n* @name next\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Move to the next slide (or fragment):\n* pres.next();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'next', function next() {\n\tvar s = this._select( this._slideCursor, this._fragmentCursor+1 );\n\tif ( s === null ) {\n\t\tdebug( 'Moving to the next slide.' );\n\t\tthis._select( this.currentSlide ); // Note: `currentSlide` is one-based, so do not need to increment\n\t} else {\n\t\tdebug( 'Moving to the next slide fragment.' );\n\t}\n\treturn this;\n});\n\n/**\n* Moves to the next slide.\n*\n* @name nextSlide\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Move to the next slide:\n* pres.nextSlide();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'nextSlide', function nextSlide() {\n\tdebug( 'Moving to the next slide.' );\n\tthis._select( this.currentSlide ); // Note: `currentSlide` is one-based, so do not need to increment\n\treturn this;\n});\n\n/**\n* Proceeds to the previous slide or slide fragment.\n*\n* @name prev\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Move to the previous slide (or fragment):\n* pres.prev();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'prev', function prev() {\n\tvar s = this._select( this._slideCursor, this._fragmentCursor-1 );\n\tvar f;\n\tif ( s === null ) {\n\t\ts = this._slideCursor - 1;\n\t\tif ( s >= 0 ) {\n\t\t\tf = this._slides[ s ].fragments.length - 1;\n\t\t} else {\n\t\t\tf = 0;\n\t\t}\n\t\tdebug( 'Moving to the last fragment of the previous slide.' );\n\t\tthis._select( s, f );\n\t} else {\n\t\tdebug( 'Moving to the previous slide fragment.' );\n\t}\n\treturn this;\n});\n\n/**\n* Moves to the previous slide.\n*\n* @name prevSlide\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Move to the previous slide:\n* pres.prevSlide();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'prevSlide', function prevSlide() {\n\tdebug( 'Moving to the previous slide.' );\n\tthis._select( this._slideCursor-1 );\n\treturn this;\n});\n\n/**\n* Reloads a presentation.\n*\n* @name reload\n* @memberof Presentation.prototype\n* @type {Function}\n* @throws {Error} must first load a presentation before being able to reload\n* @throws {Error} unable to reload presentation\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Reload a presentation:\n* try {\n*     pres.reload();\n* } catch ( error ) {\n*     console.error( error.message );\n* }\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'reload', function reload() {\n\tvar currentSlide = this.currentSlide;\n\tif ( this._source === '' ) {\n\t\tthrow new Error( 'invalid operation. No presentation to reload. Use the `load()` method to load a presentation.' );\n\t}\n\tdebug( 'Attempting to reload presentation.' );\n\ttry {\n\t\tthis.load( this._source );\n\t} catch ( err ) {\n\t\tthrow new Error( format( 'unexpected error. Unable to reload presentation. Error: %s', err.message ) );\n\t}\n\tthis.jumpTo( currentSlide );\n\tdebug( 'Successfully reloaded presentation.' );\n\treturn this;\n});\n\n/**\n* Renders the current presentation slide.\n*\n* @name render\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {(string|null)} rendered slide\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Render the current presentation slide:\n* var slide = pres.render();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'render', function render() {\n\tvar paddingBottom;\n\tvar borderRight;\n\tvar borderLeft;\n\tvar paddingTop;\n\tvar newline;\n\tvar height;\n\tvar width;\n\tvar nrows;\n\tvar frows;\n\tvar lines;\n\tvar fill;\n\tvar frag;\n\tvar str;\n\tvar idx;\n\tvar w;\n\tvar i;\n\n\tif ( this._slide === null ) {\n\t\treturn null;\n\t}\n\tw = this.width;\n\n\theight = this.slideHeight;\n\twidth = this.slideWidth;\n\n\tnrows = this._slide.length;\n\n\tidx = clamp( this._fragmentCursor, 0, this._slide.fragments.length-1 );\n\tfrag = this._slide.fragments[ idx ];\n\tfrows = frag.length;\n\n\tborderRight = this._opts.borderRight;\n\tborderLeft = this._opts.borderLeft;\n\tnewline = this._opts.newline;\n\tfill = this._opts.whitespace;\n\n\tpaddingTop = ( ( height-nrows )/2 )|0; // Note: presentation slide length assumed never greater than 2*(2^31-1)!\n\tpaddingBottom = height - frows - paddingTop;\n\tif ( this._opts.counter ) {\n\t\tpaddingBottom -= 1;\n\t}\n\t// Format slide content:\n\tlines = formatLines( width, frag, fill, width-this._slide.maxLength );\n\n\t// Render the top border:\n\tstr = repeat( this._opts.borderTop, w );\n\tstr += newline;\n\n\t// Add top padding:\n\tfor ( i = 0; i < paddingTop; i++ ) {\n\t\tstr += blankLine( width, fill, borderLeft, borderRight );\n\t\tstr += newline;\n\t}\n\t// Render the slide content:\n\tfor ( i = 0; i < lines.length; i++ ) {\n\t\tstr += borderLeft;\n\t\tstr += lines[ i ].text;\n\t\tstr += borderRight;\n\t\tstr += newline;\n\t}\n\t// Add bottom padding:\n\tfor ( i = 0; i < paddingBottom; i++ ) {\n\t\tstr += blankLine( width, fill, borderLeft, borderRight );\n\t\tstr += newline;\n\t}\n\t// Render the footer:\n\tif ( this._opts.counter ) {\n\t\tstr += borderLeft;\n\t\tstr += footer( width, fill, this._opts.counter, this._slideCursor+1, this.length ); // eslint-disable-line max-len\n\t\tstr += borderRight;\n\t\tstr += newline;\n\t}\n\t// Render the bottom border:\n\tstr += repeat( this._opts.borderBottom, w );\n\n\treturn str;\n});\n\n/**\n* Runs any code on the current presentation slide.\n*\n* @name run\n* @memberof Presentation.prototype\n* @type {Function}\n* @param {Function} clbk - callback\n* @throws {TypeError} must provide a function\n* @returns {void}\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Run any code on the current slide:\n* pres.run( done );\n*\n* function done() {\n*     // Close the REPL:\n*     repl.close();\n* }\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'run', function run( clbk ) {\n\tvar self;\n\tvar code;\n\tvar len;\n\tvar src;\n\tvar s;\n\tvar i;\n\tvar j;\n\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', clbk ) );\n\t}\n\tself = this;\n\ts = this._slides[ this._slideCursor ];\n\tif ( s ) {\n\t\tif ( s.code ) {\n\t\t\t// NOTE: we run source lines from ALL code blocks!\n\t\t\tcode = [];\n\t\t\tfor ( i = 0; i < s.code.length; i++ ) {\n\t\t\t\tif ( s.code[ i ].lang === 'javascript' ) {\n\t\t\t\t\tsrc = s.code[ i ].src;\n\t\t\t\t\tfor ( j = 0; j < src.length; j++ ) {\n\t\t\t\t\t\tcode.push( src[ j ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( code.length ) {\n\t\t\t\tdebug( 'Forwarding each line of slide code to the REPL readline interface in order to mimic user input.' );\n\t\t\t\tlen = code.length;\n\t\t\t\ti = -1;\n\t\t\t\treturn next();\n\t\t\t}\n\t\t}\n\t\tdebug( 'Slide does not contain code to run. Skipping.' );\n\t} else {\n\t\tdebug( 'No slide is currently selected. Skipping.' );\n\t}\n\tnextTick( clbk );\n\n\t/**\n\t* Callback invoked the REPL command queue drains.\n\t*\n\t* @private\n\t* @param {string} cmd - command\n\t* @param {boolean} success - boolean indicating whether the command successfully executed\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( i < len ) {\n\t\t\tif ( code[ i ] ) {\n\t\t\t\tdebug( 'Forwarding line %d.', i );\n\t\t\t\tself._repl._rli.write( code[ i ]+'\\n' );\n\t\t\t\tself._repl.once( 'drain', next );\n\t\t\t} else {\n\t\t\t\tdebug( 'Skipping blank code line.' );\n\t\t\t\tnextTick( next );\n\t\t\t}\n\t\t} else {\n\t\t\tdebug( 'Finished executing slide code.' );\n\t\t\tnextTick( clbk );\n\t\t}\n\t}\n});\n\n/**\n* Shows a presentation.\n*\n* @name show\n* @memberof Presentation.prototype\n* @type {Function}\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Show the current presentation slide:\n* pres.show();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'show', function show() {\n\tvar str = this.render();\n\tif ( str ) {\n\t\t// FIXME: should only use ANSI escape codes when output stream is a TTY\n\n\t\t/*\n\t\t* [ANSI escape sequences][1]:\n\t\t*\n\t\t* -   `\\u001b`: ESC, the escape character\n\t\t* -   `[2K`: clear the entire line\n\t\t* -   `[1G`: move the cursor to the beginning of the line\n\t\t* -   `[2A`: move the cursor to up two lines\n\t\t*\n\t\t* [1]: https://en.wikipedia.org/wiki/ANSI_escape_code\n\t\t*/\n\t\tstr = '\\u001b[2K\\u001b[1G' + str + this._opts.newline;\n\t\tif ( this._opts.autoClear ) {\n\t\t\tdebug( 'Clearing the REPL screen.' );\n\t\t\tthis._repl.clear();\n\t\t} else {\n\t\t\tstr += this._opts.newline + this._opts.newline + '\\u001b[2A';\n\t\t}\n\t\tdebug( 'Writing a presentation slide to the REPL.' );\n\t\tthis._repl._ostream.write( str );\n\t\tthis._repl._displayPrompt( false );\n\t}\n\treturn this;\n});\n\n/**\n* Returns the presentation slide content height.\n*\n* @name slideWidth\n* @memberof Presentation.prototype\n* @type {integer}\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // Return the presentation slide content height:\n* var h = pres.slideHeight;\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnlyAccessor( Presentation.prototype, 'slideHeight', function getSlideHeight() {\n\treturn this.height - 5; // header, footer, blank line, and REPL prompt\n});\n\n/**\n* Returns the presentation slide content width.\n*\n* @name slideWidth\n* @memberof Presentation.prototype\n* @type {integer}\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // Return the presentation slide content width:\n* var w = pres.slideWidth;\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnlyAccessor( Presentation.prototype, 'slideWidth', function getSlideWidth() {\n\treturn this.width - this._opts.borderLeft.length - this._opts.borderRight.length; // eslint-disable-line max-len\n});\n\n/**\n* Stops watching a presentation file for changes.\n*\n* @name unwatch\n* @memberof Presentation.prototype\n* @type {Function}\n* @param {Error} [error] - error\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Watch a presentation source file:\n* try {\n*     pres.watch();\n* } catch ( error ) {\n*     console.error( error.message );\n* }\n*\n* // ...\n*\n* // Stop watching a presentation source file:\n* pres.unwatch();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'unwatch', function unwatch( error ) {\n\tif ( this._watcher ) {\n\t\tdebug( 'No longer watching a source presentation file for changes.' );\n\t\tthis._watcher.close();\n\t\tthis._watcher = null;\n\t\tif ( error ) {\n\t\t\tthis.emit( 'unwatch', error );\n\t\t}\n\t}\n\treturn this;\n});\n\n/**\n* Watches a presentation source file for changes.\n*\n* ## Notes\n*\n* -   The method does not track source file \"renames\". If the source presentation file is renamed, watching stops.\n*\n* @name watch\n* @memberof Presentation.prototype\n* @type {Function}\n* @throws {Error} must first load a presentation before being able to monitor changes\n* @throws {Error} unable to watch presentation\n* @returns {Presentation} presentation instance\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // ...\n*\n* // Watch a presentation source file:\n* try {\n*     pres.watch();\n* } catch ( error ) {\n*     console.error( error.message );\n* }\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnly( Presentation.prototype, 'watch', function watch() {\n\tvar opts;\n\tvar self;\n\tvar w;\n\tif ( this._source === '' ) {\n\t\tthrow new Error( 'invalid operation. No presentation file to watch. Use the `load()` method to load a presentation.' );\n\t}\n\tif ( this._watcher ) {\n\t\tdebug( 'Already watching a source presentation file for changes.' );\n\t\treturn this;\n\t}\n\tself = this;\n\topts = {\n\t\t'persistent': false,\n\t\t'encoding': 'utf8'\n\t};\n\tdebug( 'Attempting to watch source presentation file for changes: %s', this._source );\n\ttry {\n\t\tw = watchFile( this._source, opts, onChange );\n\t} catch ( err ) {\n\t\tthrow new Error( format( 'unexpected error. Unable to watch presentation source file. Error: %s', err.message ) );\n\t}\n\tw.on( 'error', onError );\n\n\tdebug( 'Watching source presentation file.' );\n\tthis._watcher = w;\n\tthis.emit( 'watch' );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon a modification to a presentation source file.\n\t*\n\t* @private\n\t* @param {string} event - event type\n\t* @param {(string|Buffer)} filename - name of file which triggered the event\n\t* @returns {void}\n\t*/\n\tfunction onChange( event ) {\n\t\tvar err;\n\t\tif ( event === 'rename' ) {\n\t\t\tif ( self._watcher ) {\n\t\t\t\tdebug( 'Encountered a \"rename\" event for the source presentation file.' );\n\t\t\t\terr = new Error( 'unexpected error. Encountered a \"rename\" event for the source presentation file. No longer watching source presentation file for changes.' );\n\t\t\t\tself.unwatch( err );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// Case: event === 'change'\n\t\tdebug( 'Detected a change to the source presentation file.' );\n\t\tself.reload();\n\t\tself.emit( 'change' );\n\t}\n\n\t/**\n\t* Callback invoked upon encountering an error.\n\t*\n\t* @private\n\t* @param {Error} error - error\n\t*/\n\tfunction onError( error ) {\n\t\tdebug( 'Encountered an error while watching a source presentation file. Error: %s', error.message );\n\t\tself.unwatch( error );\n\t}\n});\n\n/**\n* Returns the presentation width.\n*\n* @name width\n* @memberof Presentation.prototype\n* @type {PositiveInteger}\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation( repl );\n*\n* // Return the presentation width:\n* var width = pres.width;\n*\n* // Close the REPL:\n* repl.close();\n*/\nsetNonEnumerableReadOnlyAccessor( Presentation.prototype, 'width', function getWidth() {\n\tif ( this._opts.width ) {\n\t\treturn this._opts.width;\n\t}\n\tif ( this._repl._ostream.isTTY ) {\n\t\treturn this._repl._ostream.columns;\n\t}\n\treturn DEFAULT_WIDTH;\n});\n\n\n// EXPORTS //\n\nmodule.exports = Presentation;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* REPL presentation.\n*\n* @module @stdlib/repl-presentation\n*\n* @example\n* var debug = require( '@stdlib/streams-node-debug-sink' );\n* var REPL = require( '@stdlib/repl' );\n* var Presentation = require( '@stdlib/repl-presentation' );\n*\n* function onExit() {\n*     console.log( 'REPL closed.' );\n* }\n*\n* // Create a new REPL:\n* var repl = new REPL({\n*     'output': debug()\n* });\n* repl.on( 'exit', onExit );\n*\n* // Create a new REPL presentation:\n* var pres = new Presentation();\n*\n* // ...\n*\n* // Close the REPL:\n* repl.close();\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_fill_line", "__commonJSMin", "exports", "module", "fillLine", "line", "fill", "left", "right", "out", "i", "require_align_center", "__commonJSMin", "exports", "module", "fillLine", "alignCenter", "width", "line", "len", "fill", "space", "left", "require_align_left", "__commonJSMin", "exports", "module", "fillLine", "alignLeft", "width", "line", "len", "fill", "padding", "right", "left", "require_align_right", "__commonJSMin", "exports", "module", "fillLine", "alignRight", "width", "line", "len", "fill", "padding", "right", "left", "require_align_flush_left", "__commonJSMin", "exports", "module", "fillLine", "alignFlushLeft", "width", "line", "len", "fill", "right", "require_align_flush_right", "__commonJSMin", "exports", "module", "fillLine", "alignFlushRight", "width", "line", "len", "fill", "left", "require_align_line", "__commonJSMin", "exports", "module", "startsWith", "alignCenter", "alignLeft", "alignRight", "alignFlushLeft", "alignFlushRight", "align", "width", "txt", "len", "fill", "padding", "require_ansi_escape_codes", "__commonJSMin", "exports", "module", "ANSI_ESCAPE_CODES", "require_ansi_escape_code", "__commonJSMin", "exports", "module", "hasOwnProp", "ANSI_ESCAPE_CODES", "escapeCode", "name", "require_horizontal_rule", "__commonJSMin", "exports", "module", "repeat", "escapeCode", "fillLine", "RESET", "ESC", "END", "DEFAULT_PATTERN", "RE_UTF16_HIGH_SURROGATE", "rule", "width", "pattern", "len", "fill", "padding", "reset", "ANSI", "rlen", "left", "str", "rem", "ch", "N", "i", "require_format", "__commonJSMin", "exports", "module", "startsWith", "align", "rule", "format", "width", "lines", "fill", "padding", "txt", "len", "i", "require_defaults", "__commonJSMin", "exports", "module", "defaults", "options", "require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isString", "isBoolean", "isPositiveInteger", "format", "validate", "opts", "options", "require_styles", "__commonJSMin", "exports", "module", "STYLES", "require_style_to_ansi", "__commonJSMin", "exports", "module", "hasOwnProp", "escapeCode", "STYLES", "style2ansi", "style", "require_style_line", "__commonJSMin", "exports", "module", "replace", "style2ansi", "escapeCode", "RESET", "ansiStyle", "line", "RE_ANSI_ESCAPE", "reset", "len", "replacer", "match", "p1", "ch", "c", "require_emoji", "__commonJSMin", "exports", "module", "replace", "hasOwnProp", "table", "TABLE", "emoji", "line", "RE_EMOJI_CODE", "len", "replacer", "match", "p1", "p2", "code", "out", "require_parse_slide", "__commonJSMin", "exports", "module", "RE_EOL", "trim", "hasOwnProp", "max", "style", "emoji", "FRAGMENT_SEP", "NOTES_SEP", "RE_CODE_DELIMITER", "CODE_INDENTATION", "LANGS", "parseSlide", "text", "CODE_BLOCK_INDENTATION", "CODE_BLOCK", "lines", "frags", "line", "lang", "out", "f", "m", "j", "k", "require_parse", "__commonJSMin", "exports", "module", "parseSlide", "SLIDE_SEP", "parse", "out", "str", "slides", "i", "require_footer", "__commonJSMin", "exports", "module", "alignFlushRight", "footer", "width", "fill", "type", "n", "total", "line", "require_blank_line", "__commonJSMin", "exports", "module", "repeat", "blankLine", "width", "fill", "borderLeft", "borderRight", "line", "require_blank", "__commonJSMin", "exports", "module", "repeat", "command", "pres", "onCommand", "str", "onDrain", "require_current_slide", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "require_end", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_first", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_first_fragment", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_jump", "__commonJSMin", "exports", "module", "logger", "isInteger", "format", "debug", "command", "pres", "onCommand", "err", "onDrain", "require_jump_to", "__commonJSMin", "exports", "module", "logger", "isPositiveInteger", "format", "debug", "command", "pres", "onCommand", "err", "onDrain", "require_last", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_last_fragment", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_load_presentation", "__commonJSMin", "exports", "module", "logger", "isString", "format", "debug", "command", "pres", "onCommand", "file", "err", "onDrain", "pos", "error", "require_next", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_next_slide", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_num_slides", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "require_help_text", "__commonJSMin", "exports", "module", "MSG", "require_pres", "__commonJSMin", "exports", "module", "HELP", "command", "pres", "onCommand", "require_prev", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_prev_slide", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_redraw", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "onDrain", "require_reload_presentation", "__commonJSMin", "exports", "module", "logger", "debug", "command", "pres", "onCommand", "onDrain", "pos", "error", "require_render_slide", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "require_run_slide", "__commonJSMin", "exports", "module", "noop", "command", "pres", "onCommand", "onDrain", "require_unwatch", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "error", "require_watch", "__commonJSMin", "exports", "module", "command", "pres", "onCommand", "require_commands", "__commonJSMin", "exports", "module", "onBlank", "onCurrentSlide", "onEnd", "onFirst", "onFirstFragment", "onJump", "onJumpTo", "onLast", "onLastFragment", "onLoadPresentation", "onNext", "onNextSlide", "onNumSlides", "onPres", "onPrev", "onPrevSlide", "onRedraw", "onReloadPresentation", "onRenderSlide", "onRunSlide", "onUnwatch", "onWatch", "commands", "pres", "cmds", "require_set_commands", "__commonJSMin", "exports", "module", "logger", "hasOwnProp", "setReadOnly", "setReadOnlyAccessor", "debug", "setCommands", "context", "commands", "cmd", "i", "require_help", "__commonJSMin", "exports", "module", "require_info", "__commonJSMin", "exports", "module", "require_example", "__commonJSMin", "exports", "module", "require_docs", "__commonJSMin", "exports", "module", "HELP", "INFO", "EXAMPLE", "DOCS", "require_main", "__commonJSMin", "exports", "module", "resolve", "watchFile", "EventEmitter", "logger", "isFunction", "isString", "isInteger", "setNonEnumerableReadOnly", "setNonEnumerableReadOnlyAccessor", "setNonEnumerable", "clamp", "wrap", "readFile", "repeat", "constructorName", "cwd", "inherit", "nextTick", "format", "formatLines", "defaults", "validate", "parse", "footer", "blankLine", "commands", "setCommands", "DOCS", "debug", "DEFAULT_WIDTH", "DEFAULT_HEIGHT", "Presentation", "options", "nargs", "text", "repl", "cmds", "opts", "self", "err", "cmd", "FLG", "d", "i", "onClose", "n", "fragment", "sc", "fc", "N", "s", "file", "fpath", "f", "currentSlide", "paddingBottom", "borderRight", "borderLeft", "paddingTop", "newline", "height", "width", "nrows", "frows", "lines", "fill", "frag", "str", "idx", "w", "clbk", "code", "len", "src", "j", "next", "error", "onChange", "onError", "event", "main"]
}
